/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package connectfour;

import java.awt.GridLayout;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JPanel;

/**
 *
 * @author VIVEK
 */
public class Board extends javax.swing.JPanel {

    private JLabel[][] pieces;
    private int boardStat[][];
    private int rows, cols, p1, p2, empty;
    private ImageIcon playerOneImageIcon, playerTwoImageIcon, emptyImageIcon;

    public Board(BoardBuilder builder) {
        this.rows = builder.getRows();
        this.cols = builder.getCols();
        this.p1 = builder.getP1();
        this.p2 = builder.getP2();
        this.empty = builder.getEmpty();
        initComponents();
        boardStat = new int[rows][cols];
        setLayout(new GridLayout(rows, cols));
        pieces = new JLabel[rows][cols];
        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < cols; j++) {
                pieces[i][j] = new JLabel(" ");
                boardStat[i][j] = empty;
                add(pieces[i][j]);
            }
        }
        emptyImageIcon = new javax.swing.ImageIcon(getClass().getResource("/res/imgs/empty.PNG"));
        playerOneImageIcon = new javax.swing.ImageIcon(getClass().getResource("/res/imgs/P1.PNG"));
        playerTwoImageIcon = new javax.swing.ImageIcon(getClass().getResource("/res/imgs/P2.PNG"));
        BufferedImage img = new BufferedImage(1, 1, BufferedImage.TYPE_INT_RGB);
        emptyImageIcon.paintIcon(new JPanel(), img.getGraphics(), 0, 0);
        playerOneImageIcon.paintIcon(new JPanel(), img.getGraphics(), 0, 0);
        playerTwoImageIcon.paintIcon(new JPanel(), img.getGraphics(), 0, 0);

        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < cols; j++) {
                pieces[i][j].setIcon(emptyImageIcon);
            }
        }
    }

    public void drop(int pos, int turn) {
        int x, i;
        for (i = rows - 1; i >= 0; i--) {
            if (boardStat[i][pos] == 0) {
                boardStat[i][pos] = turn;
                break;
            }
        }
        repaint();
    }

    public void Repaint(int[][] boardstat) {
        this.boardStat = boardstat;
        repaint();
    }

    public void Repaint() {
        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < cols; j++) {
                if (boardStat[i][j] == p1) {
                    pieces[i][j].setIcon(playerOneImageIcon);
                } else if (boardStat[i][j] == p2) {
                    pieces[i][j].setIcon(playerTwoImageIcon);
                } else {
                    pieces[i][j].setIcon(emptyImageIcon);
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
